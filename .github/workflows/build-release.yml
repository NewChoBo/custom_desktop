name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

permissions:
  contents: write    # 릴리즈 생성·자산 업로드에 필요
  actions: read
  security-events: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
      - name: Checkout code (with all tags & history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0    # 모든 커밋 + 태그 가져오기 :contentReference[oaicite:0]{index=0}
          fetch-tags: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Electron app
        run: npm run pack

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build
          path: release/
          retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code (with tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Determine version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Delete existing release & tag (if any)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release delete "${{ steps.version.outputs.version }}" --yes || echo "No existing release"
          git push origin --delete "refs/tags/${{ steps.version.outputs.version }}" || echo "No existing tag"
          sleep 5  # 삭제 후 5초 대기 (Race condition 방지)

      - name: Create Git tag (for workflow_dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: |
          git tag "${{ steps.version.outputs.version }}"
          git push origin "${{ steps.version.outputs.version }}"

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2   # v2로 업그레이드 :contentReference[oaicite:1]{index=1}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Custom Desktop Icons ${{ steps.version.outputs.version }}
          body: |
            ## 🎯 Custom Desktop Icons ${{ steps.version.outputs.version }}
            ...
          draft: false
          prerelease: false
          files: |
            artifacts/**/*

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
